name: Docker build and push
 
on:
  push:
    branches:
    - main 
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * 2'

  workflow_dispatch:

jobs:
  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    env:
      ACTIONS_RUNNER_DEBUG: true
    steps:
      - name: Enable auto merge to pull request
        uses: poad/github-pull-request-auto-merge-enable-action@v1.0.2
        with:
          pull_request_number: ${{ github.event.pull_request.number }}
          github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
          repository: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          merge_method: SQUASH

  docker_build:
    strategy:
      matrix:
        versions: [
          { dir: 'crystal', tag: 'crystal' },
          { dir: 'nim', tag: 'nim' }
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
    - name: "Build ${{ matrix.versions.tag }}"
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      run: |
        CUR=$(pwd) && \
        cd ${{ matrix.versions.dir }} && \
        IMAGRE_NAME=poad/docker-programming-lang-envs:${{ matrix.versions.tag }} && \
        docker build -t ${IMAGRE_NAME} . && \
        cd ${CUR}

  docker_push:
    strategy:
      matrix:
        versions: [
          { dir: 'crystal', tag: 'crystal' },
          { dir: 'nim', tag: 'nim' }
        ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      if: github.event_name != 'pull_request' && github.event_name != 'schedule' && env.CHANGE_STATE != 'changed'
    - name: Build ${{ matrix.versions.tag }}
      if: github.event_name != 'pull_request' && github.event_name != 'schedule' && env.CHANGE_STATE != 'changed'
      run: |
        CUR=$(pwd) && \
        cd ${{ matrix.versions.dir }} && \
        IMAGRE_NAME=poad/docker-programming-lang-envs:${{ matrix.versions.tag }} && \
        docker build -t ${IMAGRE_NAME} . && \
        cd ${CUR}

    - name: Push ${{ matrix.versions.tag }}
      if: github.event_name != 'pull_request' && github.event_name != 'schedule' && env.CHANGE_STATE != 'changed'
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u poad --password-stdin && \
        IMAGRE_NAME=poad/docker-programming-lang-envs:${{ matrix.versions.tag }} && \
        docker push ${IMAGRE_NAME}
